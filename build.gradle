plugins {
	id 'java-library'
	id 'eclipse'
	id 'com.github.johnrengelman.shadow' version '7.1.2'
	id 'maven-publish'
}

group = 'etri'
version = '20.05.15'

sourceCompatibility = JavaVersion.VERSION_1_8
[compileJava,compileTestJava]*.options*.encoding = 'UTF-8'

repositories {
    mavenLocal()
	maven {
		url "https://repo.osgeo.org/repository/release/"
		allowInsecureProtocol = true
	}
    mavenCentral()
}

ext {
	hadoop_version = '2.7.3'
//	hadoop_version = '3.1.1'
	avro_version = '1.9.2'
}

dependencies {
	implementation project(':marmot.data')
	
	implementation ("org.apache.hadoop:hadoop-common:${hadoop_version}")
//	implementation ("org.apache.hadoop:hadoop-hdfs-client:${hadoop_version}")
	
	// Avro (Avro 파일을 HDFS에 저장하기 위해 사용: FsInput)
	implementation ("org.apache.avro:avro-mapred:${avro_version}") {
		exclude group: 'org.apache.avro', module: 'avro-ipc'
		exclude group: 'org.apache.avro', module: 'avro-ipc-jetty'
	}
}

shadowJar {
	classifier 'all'
	
//	zip64 true
	mergeServiceFiles()
	
	exclude 'META-INF/*.SF'
	exclude 'META-INF/*.DSA'
	exclude 'META-INF/*.RSA'
}

task sourceJar(type: Jar) {
	classifier 'sources'
	from sourceSets.main.allSource
}
task javadocJar(type: Jar) {
	classifier 'javadoc'
	from javadoc.destinationDir
}

artifacts {
	archives sourceJar
	archives javadocJar
	archives shadowJar
}

publishing {
	publications {
		marmotHadoop(MavenPublication) {
			from components.java
			
			artifact sourceJar
			artifact javadocJar
			artifact shadowJar
		}
	}
}
